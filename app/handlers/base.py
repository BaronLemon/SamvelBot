from aiogram.types import Message, CallbackQuery, PreCheckoutQuery
from aiogram.filters import CommandStart
from aiogram import F, Router, Bot
import app.keyboards as kb
from app.func import send_invoice
from datetime import datetime, timedelta, timezone
from zoneinfo import ZoneInfo
from db.subs import add_or_update_subscription



invite_link = 'https://t.me/+sDgRD76MeIYzODdi'
CHANNEL_ID = '-1002009310043'
rt = Router()


@rt.message(CommandStart())
async def start_command(message: Message):
    await message.answer(
f"""üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –º–∏—Ä!""",
reply_markup=kb.info_btn)


@rt.callback_query(F.data == 'info')
async def about_channel(callback: CallbackQuery):
    await callback.message.answer(
"""–ù–∞—à –∫–∞–Ω–∞–ª ‚Äî —ç—Ç–æ –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å –≤ –º–∏—Ä–µ –ª–∏—á–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π 

–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –±—é–¥–∂–µ—Ç–æ–º, —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –∏ –ø—Ä–∏—É–º–Ω–æ–∂–µ–Ω–∏—è –∫–∞–ø–∏—Ç–∞–ª–∞

–ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º —Ä–∞–∑–≤–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å –∏ –Ω–∞—É—á–∏–º, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –¥–µ–Ω—å–≥–∏ —Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–∞ –≤–∞—Å

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –∏—Å–∫—É—Å—Å—Ç–≤–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –º–∏—Ä–∞!""",
reply_markup=kb.pay_btn)



@rt.callback_query(F.data == 'pay')
async def invoice(callback: CallbackQuery):
    await send_invoice(callback)
    

@rt.pre_checkout_query(lambda query: True)
async def pre_checkout_query(pre_checkout: PreCheckoutQuery, bot: Bot):
    await bot.answer_pre_checkout_query(pre_checkout.id, ok = True)


@rt.message(F.successful_payment)
async def successful_payment(message: Message, bot: Bot):


    msk_time = ZoneInfo("Europe/Moscow")
    await add_or_update_subscription(user_id=message.from_user.id, expires_at=datetime.now(msk_time) + timedelta(days=30))

    try:
        user_first_name = message.from_user.first_name
        invite = await bot.create_chat_invite_link(
            chat_id=CHANNEL_ID,
            member_limit=1,
            expire_date=datetime.now(msk_time) + timedelta(days=1),
            name=f'–ü–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è {user_first_name}'
        )

        await message.answer(
            f"‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É –ø–æ–¥–ø–∏—Å–∫–∏!\n\n"
            f"–í–æ—Ç —Ç–≤–æ—è –ª–∏—á–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª:\n"
            f"{invite.invite_link}\n\n"
            f"‚ö†Ô∏è –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 24 —á–∞—Å–∞ –∏ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–±—è.", disable_web_page_preview=True
        )



    except Exception as e:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.\n\n –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞: @samokha_menegr")

    